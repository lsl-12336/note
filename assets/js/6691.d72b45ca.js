"use strict";(self.webpackChunklu_knowledge=self.webpackChunklu_knowledge||[]).push([[6691],{2641:(t,e,a)=>{function l(t,e){t.accDescr&&e.setAccDescription?.(t.accDescr),t.accTitle&&e.setAccTitle?.(t.accTitle),t.title&&e.setDiagramTitle?.(t.title)}a.d(e,{a:()=>l}),(0,a(9400).a)(l,"populateCommonDb")},6691:(t,e,a)=>{a.d(e,{diagram:()=>m});var l=a(2641),r=a(737),n=(a(5437),a(7204),a(3039),a(257),a(9034)),o=a(1888),i=(a(632),a(4378)),c=(a(8564),a(9823),a(6317),a(6735),a(2890),a(7170),a(9400)),s={packet:[]},d=structuredClone(s),k=i.s.packet,p=(0,c.a)((()=>{let t=(0,o.l)({...k,...(0,i.A)().packet});return t.showBits&&(t.paddingY+=10),t}),"getConfig"),b=(0,c.a)((()=>d.packet),"getPacket"),g={pushWord:(0,c.a)((t=>{t.length>0&&d.packet.push(t)}),"pushWord"),getPacket:b,getConfig:p,clear:(0,c.a)((()=>{(0,i.P)(),d=structuredClone(s)}),"clear"),setAccTitle:i.Q,getAccTitle:i.R,setDiagramTitle:i.U,getDiagramTitle:i.V,getAccDescription:i.T,setAccDescription:i.S},h=(0,c.a)((t=>{(0,l.a)(t,g);let e=-1,a=[],r=1,{bitsPerRow:n}=g.getConfig();for(let{start:l,end:o,label:c}of t.blocks){if(o&&o<l)throw new Error(`Packet block ${l} - ${o} is invalid. End must be greater than start.`);if(l!==e+1)throw new Error(`Packet block ${l} - ${o??l} is not contiguous. It should start from ${e+1}.`);for(e=o??l,i.b.debug(`Packet block ${l} - ${e} with label ${c}`);a.length<=n+1&&g.getPacket().length<1e4;){let[t,e]=u({start:l,end:o,label:c},r,n);if(a.push(t),t.end+1===r*n&&(g.pushWord(a),a=[],r++),!e)break;({start:l,end:o,label:c}=e)}}g.pushWord(a)}),"populate"),u=(0,c.a)(((t,e,a)=>{if(void 0===t.end&&(t.end=t.start),t.start>t.end)throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);return t.end+1<=e*a?[t,void 0]:[{start:t.start,end:e*a-1,label:t.label},{start:e*a,end:t.end,label:t.label}]}),"getNextFittingBlock"),f={parse:(0,c.a)((async t=>{let e=await(0,r.a)("packet",t);i.b.debug(e),h(e)}),"parse")},w=(0,c.a)(((t,e,a,l)=>{let r=l.db,o=r.getConfig(),{rowHeight:c,paddingY:s,bitWidth:d,bitsPerRow:k}=o,p=r.getPacket(),b=r.getDiagramTitle(),g=c+s,h=g*(p.length+1)-(b?0:c),u=d*k+2,f=(0,n.a)(e);f.attr("viewbox",`0 0 ${u} ${h}`),(0,i.M)(f,h,u,o.useMaxWidth);for(let[t,e]of p.entries())x(f,e,t,o);f.append("text").text(b).attr("x",u/2).attr("y",h-g/2).attr("dominant-baseline","middle").attr("text-anchor","middle").attr("class","packetTitle")}),"draw"),x=(0,c.a)(((t,e,a,{rowHeight:l,paddingX:r,paddingY:n,bitWidth:o,bitsPerRow:i,showBits:c})=>{let s=t.append("g"),d=a*(l+n)+n;for(let t of e){let e=t.start%i*o+1,a=(t.end-t.start+1)*o-r;if(s.append("rect").attr("x",e).attr("y",d).attr("width",a).attr("height",l).attr("class","packetBlock"),s.append("text").attr("x",e+a/2).attr("y",d+l/2).attr("class","packetLabel").attr("dominant-baseline","middle").attr("text-anchor","middle").text(t.label),!c)continue;let n=t.end===t.start,k=d-2;s.append("text").attr("x",e+(n?a/2:0)).attr("y",k).attr("class","packetByte start").attr("dominant-baseline","auto").attr("text-anchor",n?"middle":"start").text(t.start),n||s.append("text").attr("x",e+a).attr("y",k).attr("class","packetByte end").attr("dominant-baseline","auto").attr("text-anchor","end").text(t.end)}}),"drawWord"),$={draw:w},C={byteFontSize:"10px",startByteColor:"black",endByteColor:"black",labelColor:"black",labelFontSize:"12px",titleColor:"black",titleFontSize:"14px",blockStrokeColor:"black",blockStrokeWidth:"1",blockFillColor:"#efefef"},y=(0,c.a)((({packet:t}={})=>{let e=(0,o.l)(C,t);return`\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`}),"styles"),m={parser:f,db:g,renderer:$,styles:y}}}]);